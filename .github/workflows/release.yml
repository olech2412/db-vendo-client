name: Release Pipeline

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Quellbranch, der released werden soll'
        required: true
        default: 'main'
      release_version:
        description: 'Release-Version (z.B. 1.2.3)'
        required: true
      next_version:
        description: 'Nächste Version (z.B. 1.2.4-SNAPSHOT)'
        required: true

permissions:
  contents: read
  packages: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Quellbranch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setze Release-Version in pom.xml
        run: mvn versions:set -DnewVersion=${{ github.event.inputs.release_version }} -DgenerateBackupPoms=false

      - name: Commit & Tag Release-Version
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -am "Release ${{ github.event.inputs.release_version }}"
          git tag v${{ github.event.inputs.release_version }}

      # Optional: Deployment-Schritt, z.B. zu Maven Central
      # - name: Deploy to Maven Central
      #   run: mvn deploy -P release

      - name: Deploy zu GitHub Maven Artifactory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn deploy -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository }} -DskipTests

      - name: Setze nächste Version (Snapshot) in pom.xml
        run: mvn versions:set -DnewVersion=${{ github.event.inputs.next_version }} -DgenerateBackupPoms=false

      - name: Commit nächste Version
        run: |
          git commit -am "Prepare next version ${{ github.event.inputs.next_version }}"

      - name: Push Änderungen & Tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:${{ github.event.inputs.branch }}
          git push origin v${{ github.event.inputs.release_version }}