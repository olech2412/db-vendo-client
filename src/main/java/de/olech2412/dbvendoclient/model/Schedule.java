/*
 * db-vendo-client
 * Schema for db-vendo-client/hafas-rest-api's Friendly Public Transport Format REST API
 *
 * The version of the OpenAPI document: 6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.olech2412.dbvendoclient.model;

import com.fasterxml.jackson.annotation.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * There are many ways to format schedules of public transport routes. This one tries to balance the amount of data and consumability. It is specifically geared towards urban public transport, with frequent trains and homogenous travels.
 */
@JsonPropertyOrder({
        Schedule.JSON_PROPERTY_TYPE,
        Schedule.JSON_PROPERTY_ID,
        Schedule.JSON_PROPERTY_ROUTE,
        Schedule.JSON_PROPERTY_MODE,
        Schedule.JSON_PROPERTY_SEQUENCE,
        Schedule.JSON_PROPERTY_STARTS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T16:58:48.518685525+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class Schedule {
    public static final String JSON_PROPERTY_TYPE = "type";
    public static final String JSON_PROPERTY_ID = "id";
    public static final String JSON_PROPERTY_ROUTE = "route";
    public static final String JSON_PROPERTY_MODE = "mode";
    public static final String JSON_PROPERTY_SEQUENCE = "sequence";
    public static final String JSON_PROPERTY_STARTS = "starts";
    @jakarta.annotation.Nullable
    private TypeEnum type;
    @jakarta.annotation.Nullable
    private String id;
    @jakarta.annotation.Nullable
    private String route;
    @jakarta.annotation.Nullable
    private ModeEnum mode;
    @jakarta.annotation.Nullable
    private List<ArrivalDeparture> sequence = new ArrayList<>();
    @jakarta.annotation.Nullable
    private List<String> starts = new ArrayList<>();

    public Schedule() {
    }

    public Schedule type(@jakarta.annotation.Nullable TypeEnum type) {

        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TypeEnum getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(@jakarta.annotation.Nullable TypeEnum type) {
        this.type = type;
    }

    public Schedule id(@jakarta.annotation.Nullable String id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(@jakarta.annotation.Nullable String id) {
        this.id = id;
    }

    public Schedule route(@jakarta.annotation.Nullable String route) {

        this.route = route;
        return this;
    }

    /**
     * Get route
     *
     * @return route
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ROUTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRoute() {
        return route;
    }

    @JsonProperty(JSON_PROPERTY_ROUTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRoute(@jakarta.annotation.Nullable String route) {
        this.route = route;
    }

    public Schedule mode(@jakarta.annotation.Nullable ModeEnum mode) {

        this.mode = mode;
        return this;
    }

    /**
     * Get mode
     *
     * @return mode
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_MODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ModeEnum getMode() {
        return mode;
    }

    @JsonProperty(JSON_PROPERTY_MODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMode(@jakarta.annotation.Nullable ModeEnum mode) {
        this.mode = mode;
    }

    public Schedule sequence(@jakarta.annotation.Nullable List<ArrivalDeparture> sequence) {

        this.sequence = sequence;
        return this;
    }

    public Schedule addSequenceItem(ArrivalDeparture sequenceItem) {
        if (this.sequence == null) {
            this.sequence = new ArrayList<>();
        }
        this.sequence.add(sequenceItem);
        return this;
    }

    /**
     * Get sequence
     *
     * @return sequence
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SEQUENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<ArrivalDeparture> getSequence() {
        return sequence;
    }

    @JsonProperty(JSON_PROPERTY_SEQUENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSequence(@jakarta.annotation.Nullable List<ArrivalDeparture> sequence) {
        this.sequence = sequence;
    }

    public Schedule starts(@jakarta.annotation.Nullable List<String> starts) {

        this.starts = starts;
        return this;
    }

    public Schedule addStartsItem(String startsItem) {
        if (this.starts == null) {
            this.starts = new ArrayList<>();
        }
        this.starts.add(startsItem);
        return this;
    }

    /**
     * array of Unix timestamps
     *
     * @return starts
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STARTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getStarts() {
        return starts;
    }

    @JsonProperty(JSON_PROPERTY_STARTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStarts(@jakarta.annotation.Nullable List<String> starts) {
        this.starts = starts;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Schedule schedule = (Schedule) o;
        return Objects.equals(this.type, schedule.type) &&
                Objects.equals(this.id, schedule.id) &&
                Objects.equals(this.route, schedule.route) &&
                Objects.equals(this.mode, schedule.mode) &&
                Objects.equals(this.sequence, schedule.sequence) &&
                Objects.equals(this.starts, schedule.starts);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, id, route, mode, sequence, starts);
    }

    @Override
    public String toString() {
        String sb = "class Schedule {\n" +
                "    type: " + toIndentedString(type) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    route: " + toIndentedString(route) + "\n" +
                "    mode: " + toIndentedString(mode) + "\n" +
                "    sequence: " + toIndentedString(sequence) + "\n" +
                "    starts: " + toIndentedString(starts) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        SCHEDULE("schedule");

        private final String value;

        TypeEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static TypeEnum fromValue(String value) {
            for (TypeEnum b : TypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

    /**
     * Gets or Sets mode
     */
    public enum ModeEnum {
        AIRCRAFT("aircraft"),

        BICYCLE("bicycle"),

        BUS("bus"),

        CAR("car"),

        GONDOLA("gondola"),

        TAXI("taxi"),

        TRAIN("train"),

        WALKING("walking"),

        WATERCRAFT("watercraft");

        private final String value;

        ModeEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static ModeEnum fromValue(String value) {
            for (ModeEnum b : ModeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

}

