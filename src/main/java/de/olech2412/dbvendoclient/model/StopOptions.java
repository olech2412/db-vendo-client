/*
 * db-vendo-client
 * Schema for db-vendo-client/hafas-rest-api's Friendly Public Transport Format REST API
 *
 * The version of the OpenAPI document: 6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.olech2412.dbvendoclient.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * StopOptions
 */
@JsonPropertyOrder({
        StopOptions.JSON_PROPERTY_LINES_OF_STOPS,
        StopOptions.JSON_PROPERTY_SUB_STOPS,
        StopOptions.JSON_PROPERTY_ENTRANCES,
        StopOptions.JSON_PROPERTY_REMARKS,
        StopOptions.JSON_PROPERTY_LANGUAGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T16:58:48.518685525+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class StopOptions {
    public static final String JSON_PROPERTY_LINES_OF_STOPS = "linesOfStops";
    public static final String JSON_PROPERTY_SUB_STOPS = "subStops";
    public static final String JSON_PROPERTY_ENTRANCES = "entrances";
    public static final String JSON_PROPERTY_REMARKS = "remarks";
    public static final String JSON_PROPERTY_LANGUAGE = "language";
    @jakarta.annotation.Nullable
    private Boolean linesOfStops = false;
    @jakarta.annotation.Nullable
    private Boolean subStops = true;
    @jakarta.annotation.Nullable
    private Boolean entrances = true;
    @jakarta.annotation.Nullable
    private Boolean remarks = true;
    @jakarta.annotation.Nullable
    private String language = "en";

    public StopOptions() {
    }

    public StopOptions linesOfStops(@jakarta.annotation.Nullable Boolean linesOfStops) {

        this.linesOfStops = linesOfStops;
        return this;
    }

    /**
     * parse &amp; expose lines at the stop/station?
     *
     * @return linesOfStops
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LINES_OF_STOPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getLinesOfStops() {
        return linesOfStops;
    }


    @JsonProperty(JSON_PROPERTY_LINES_OF_STOPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLinesOfStops(@jakarta.annotation.Nullable Boolean linesOfStops) {
        this.linesOfStops = linesOfStops;
    }

    public StopOptions subStops(@jakarta.annotation.Nullable Boolean subStops) {

        this.subStops = subStops;
        return this;
    }

    /**
     * parse &amp; expose sub-stops of stations?
     *
     * @return subStops
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SUB_STOPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getSubStops() {
        return subStops;
    }


    @JsonProperty(JSON_PROPERTY_SUB_STOPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubStops(@jakarta.annotation.Nullable Boolean subStops) {
        this.subStops = subStops;
    }

    public StopOptions entrances(@jakarta.annotation.Nullable Boolean entrances) {

        this.entrances = entrances;
        return this;
    }

    /**
     * parse &amp; expose entrances of stops/stations?
     *
     * @return entrances
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ENTRANCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getEntrances() {
        return entrances;
    }


    @JsonProperty(JSON_PROPERTY_ENTRANCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEntrances(@jakarta.annotation.Nullable Boolean entrances) {
        this.entrances = entrances;
    }

    public StopOptions remarks(@jakarta.annotation.Nullable Boolean remarks) {

        this.remarks = remarks;
        return this;
    }

    /**
     * parse &amp; expose hints &amp; warnings?
     *
     * @return remarks
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_REMARKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRemarks() {
        return remarks;
    }


    @JsonProperty(JSON_PROPERTY_REMARKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRemarks(@jakarta.annotation.Nullable Boolean remarks) {
        this.remarks = remarks;
    }

    public StopOptions language(@jakarta.annotation.Nullable String language) {

        this.language = language;
        return this;
    }

    /**
     * Language of the results
     *
     * @return language
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getLanguage() {
        return language;
    }


    @JsonProperty(JSON_PROPERTY_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLanguage(@jakarta.annotation.Nullable String language) {
        this.language = language;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        StopOptions stopOptions = (StopOptions) o;
        return Objects.equals(this.linesOfStops, stopOptions.linesOfStops) &&
                Objects.equals(this.subStops, stopOptions.subStops) &&
                Objects.equals(this.entrances, stopOptions.entrances) &&
                Objects.equals(this.remarks, stopOptions.remarks) &&
                Objects.equals(this.language, stopOptions.language);
    }

    @Override
    public int hashCode() {
        return Objects.hash(linesOfStops, subStops, entrances, remarks, language);
    }

    @Override
    public String toString() {
        String sb = "class StopOptions {\n" +
                "    linesOfStops: " + toIndentedString(linesOfStops) + "\n" +
                "    subStops: " + toIndentedString(subStops) + "\n" +
                "    entrances: " + toIndentedString(entrances) + "\n" +
                "    remarks: " + toIndentedString(remarks) + "\n" +
                "    language: " + toIndentedString(language) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

