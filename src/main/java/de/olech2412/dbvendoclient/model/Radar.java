/*
 * db-vendo-client
 * Schema for db-vendo-client/hafas-rest-api's Friendly Public Transport Format REST API
 *
 * The version of the OpenAPI document: 6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.olech2412.dbvendoclient.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Radar
 */
@JsonPropertyOrder({
        Radar.JSON_PROPERTY_MOVEMENTS,
        Radar.JSON_PROPERTY_REALTIME_DATA_UPDATED_AT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T16:58:48.518685525+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class Radar {
    public static final String JSON_PROPERTY_MOVEMENTS = "movements";
    public static final String JSON_PROPERTY_REALTIME_DATA_UPDATED_AT = "realtimeDataUpdatedAt";
    @jakarta.annotation.Nullable
    private List<Movement> movements = new ArrayList<>();
    @jakarta.annotation.Nullable
    private BigDecimal realtimeDataUpdatedAt;

    public Radar() {
    }

    public Radar movements(@jakarta.annotation.Nullable List<Movement> movements) {

        this.movements = movements;
        return this;
    }

    public Radar addMovementsItem(Movement movementsItem) {
        if (this.movements == null) {
            this.movements = new ArrayList<>();
        }
        this.movements.add(movementsItem);
        return this;
    }

    /**
     * Get movements
     *
     * @return movements
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_MOVEMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Movement> getMovements() {
        return movements;
    }


    @JsonProperty(JSON_PROPERTY_MOVEMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMovements(@jakarta.annotation.Nullable List<Movement> movements) {
        this.movements = movements;
    }

    public Radar realtimeDataUpdatedAt(@jakarta.annotation.Nullable BigDecimal realtimeDataUpdatedAt) {

        this.realtimeDataUpdatedAt = realtimeDataUpdatedAt;
        return this;
    }

    /**
     * Get realtimeDataUpdatedAt
     *
     * @return realtimeDataUpdatedAt
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_REALTIME_DATA_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRealtimeDataUpdatedAt() {
        return realtimeDataUpdatedAt;
    }


    @JsonProperty(JSON_PROPERTY_REALTIME_DATA_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRealtimeDataUpdatedAt(@jakarta.annotation.Nullable BigDecimal realtimeDataUpdatedAt) {
        this.realtimeDataUpdatedAt = realtimeDataUpdatedAt;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Radar radar = (Radar) o;
        return Objects.equals(this.movements, radar.movements) &&
                Objects.equals(this.realtimeDataUpdatedAt, radar.realtimeDataUpdatedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(movements, realtimeDataUpdatedAt);
    }

    @Override
    public String toString() {
        String sb = "class Radar {\n" +
                "    movements: " + toIndentedString(movements) + "\n" +
                "    realtimeDataUpdatedAt: " + toIndentedString(realtimeDataUpdatedAt) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

