/*
 * db-vendo-client
 * Schema for db-vendo-client/hafas-rest-api's Friendly Public Transport Format REST API
 *
 * The version of the OpenAPI document: 6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.olech2412.dbvendowrapper.model;

import com.fasterxml.jackson.annotation.*;

import java.util.Objects;

/**
 * Hint
 */
@JsonPropertyOrder({
        Hint.JSON_PROPERTY_TYPE,
        Hint.JSON_PROPERTY_CODE,
        Hint.JSON_PROPERTY_SUMMARY,
        Hint.JSON_PROPERTY_TEXT,
        Hint.JSON_PROPERTY_TRIP_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T16:58:48.518685525+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class Hint {
    public static final String JSON_PROPERTY_TYPE = "type";
    public static final String JSON_PROPERTY_CODE = "code";
    public static final String JSON_PROPERTY_SUMMARY = "summary";
    public static final String JSON_PROPERTY_TEXT = "text";
    public static final String JSON_PROPERTY_TRIP_ID = "tripId";
    @jakarta.annotation.Nullable
    private TypeEnum type;
    @jakarta.annotation.Nullable
    private String code;
    @jakarta.annotation.Nullable
    private String summary;
    @jakarta.annotation.Nullable
    private String text;
    @jakarta.annotation.Nullable
    private String tripId;
    public Hint() {
    }

    public Hint type(@jakarta.annotation.Nullable TypeEnum type) {

        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TypeEnum getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(@jakarta.annotation.Nullable TypeEnum type) {
        this.type = type;
    }

    public Hint code(@jakarta.annotation.Nullable String code) {

        this.code = code;
        return this;
    }

    /**
     * Get code
     *
     * @return code
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCode() {
        return code;
    }

    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCode(@jakarta.annotation.Nullable String code) {
        this.code = code;
    }

    public Hint summary(@jakarta.annotation.Nullable String summary) {

        this.summary = summary;
        return this;
    }

    /**
     * Get summary
     *
     * @return summary
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SUMMARY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSummary() {
        return summary;
    }

    @JsonProperty(JSON_PROPERTY_SUMMARY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSummary(@jakarta.annotation.Nullable String summary) {
        this.summary = summary;
    }

    public Hint text(@jakarta.annotation.Nullable String text) {

        this.text = text;
        return this;
    }

    /**
     * Get text
     *
     * @return text
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getText() {
        return text;
    }

    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setText(@jakarta.annotation.Nullable String text) {
        this.text = text;
    }

    public Hint tripId(@jakarta.annotation.Nullable String tripId) {

        this.tripId = tripId;
        return this;
    }

    /**
     * Get tripId
     *
     * @return tripId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TRIP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTripId() {
        return tripId;
    }

    @JsonProperty(JSON_PROPERTY_TRIP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTripId(@jakarta.annotation.Nullable String tripId) {
        this.tripId = tripId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Hint hint = (Hint) o;
        return Objects.equals(this.type, hint.type) &&
                Objects.equals(this.code, hint.code) &&
                Objects.equals(this.summary, hint.summary) &&
                Objects.equals(this.text, hint.text) &&
                Objects.equals(this.tripId, hint.tripId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, code, summary, text, tripId);
    }

    @Override
    public String toString() {
        String sb = "class Hint {\n" +
                "    type: " + toIndentedString(type) + "\n" +
                "    code: " + toIndentedString(code) + "\n" +
                "    summary: " + toIndentedString(summary) + "\n" +
                "    text: " + toIndentedString(text) + "\n" +
                "    tripId: " + toIndentedString(tripId) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        FOREIGN_ID("foreign-id"),

        HINT("hint"),

        LOCAL_FARE_ZONE("local-fare-zone"),

        STATUS("status"),

        STOP_DHID("stop-dhid"),

        STOP_WEBSITE("stop-website"),

        TRANSIT_AUTHORITY("transit-authority");

        private final String value;

        TypeEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static TypeEnum fromValue(String value) {
            for (TypeEnum b : TypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

}

