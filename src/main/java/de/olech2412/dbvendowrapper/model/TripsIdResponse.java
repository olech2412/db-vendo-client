/*
 * db-vendo-client
 * Schema for db-vendo-client/hafas-rest-api's Friendly Public Transport Format REST API
 *
 * The version of the OpenAPI document: 6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.olech2412.dbvendowrapper.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

/**
 * TripsIdGet2XXResponse
 */
@JsonPropertyOrder({
        TripsIdResponse.JSON_PROPERTY_TRIP,
        TripsIdResponse.JSON_PROPERTY_REALTIME_DATA_UPDATED_AT
})
@JsonTypeName("_trips__id__get_2XX_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T16:58:48.518685525+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class TripsIdResponse implements CachedAwareResponse {
    public static final String JSON_PROPERTY_TRIP = "trip";
    public static final String JSON_PROPERTY_REALTIME_DATA_UPDATED_AT = "realtimeDataUpdatedAt";
    @jakarta.annotation.Nonnull
    private Trip trip;
    @jakarta.annotation.Nullable
    private Integer realtimeDataUpdatedAt;
    private boolean fromCache = false;

    public TripsIdResponse() {
    }

    public TripsIdResponse trip(@jakarta.annotation.Nonnull Trip trip) {

        this.trip = trip;
        return this;
    }

    /**
     * Get trip
     *
     * @return trip
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TRIP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Trip getTrip() {
        return trip;
    }


    @JsonProperty(JSON_PROPERTY_TRIP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTrip(@jakarta.annotation.Nonnull Trip trip) {
        this.trip = trip;
    }

    public TripsIdResponse realtimeDataUpdatedAt(@jakarta.annotation.Nullable Integer realtimeDataUpdatedAt) {

        this.realtimeDataUpdatedAt = realtimeDataUpdatedAt;
        return this;
    }

    /**
     * Get realtimeDataUpdatedAt
     *
     * @return realtimeDataUpdatedAt
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_REALTIME_DATA_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getRealtimeDataUpdatedAt() {
        return realtimeDataUpdatedAt;
    }


    @JsonProperty(JSON_PROPERTY_REALTIME_DATA_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRealtimeDataUpdatedAt(@jakarta.annotation.Nullable Integer realtimeDataUpdatedAt) {
        this.realtimeDataUpdatedAt = realtimeDataUpdatedAt;
    }

    @Override
    public void setFromCache(boolean fromCache) {
        this.fromCache = fromCache;
    }

    @Override
    public boolean isFromCache() {
        return fromCache;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TripsIdResponse tripsIdResponse = (TripsIdResponse) o;
        return Objects.equals(this.trip, tripsIdResponse.trip) &&
                Objects.equals(this.realtimeDataUpdatedAt, tripsIdResponse.realtimeDataUpdatedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(trip, realtimeDataUpdatedAt);
    }

    @Override
    public String toString() {
        String sb = "class TripsIdGet2XXResponse {\n" +
                "    trip: " + toIndentedString(trip) + "\n" +
                "    realtimeDataUpdatedAt: " + toIndentedString(realtimeDataUpdatedAt) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

