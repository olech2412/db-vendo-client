/*
 * db-vendo-client
 * Schema for db-vendo-client/hafas-rest-api's Friendly Public Transport Format REST API
 *
 * The version of the OpenAPI document: 6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.olech2412.dbvendowrapper.model;

import com.fasterxml.jackson.annotation.*;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * A ProductType relates to how a means of transport \&quot;works\&quot; in local context. Example: Even though S-Bahn and U-Bahn in Berlin are both trains, they have different operators, service patterns, stations and look different. Therefore, they are two distinct products subway and suburban.
 */
@JsonPropertyOrder({
        ProductType.JSON_PROPERTY_ID,
        ProductType.JSON_PROPERTY_MODE,
        ProductType.JSON_PROPERTY_NAME,
        ProductType.JSON_PROPERTY_SHORT,
        ProductType.JSON_PROPERTY_BITMASKS,
        ProductType.JSON_PROPERTY_DEFAULT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T16:58:48.518685525+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class ProductType {
    public static final String JSON_PROPERTY_ID = "id";
    public static final String JSON_PROPERTY_MODE = "mode";
    public static final String JSON_PROPERTY_NAME = "name";
    public static final String JSON_PROPERTY_SHORT = "short";
    public static final String JSON_PROPERTY_BITMASKS = "bitmasks";
    public static final String JSON_PROPERTY_DEFAULT = "default";
    @jakarta.annotation.Nullable
    private String id;
    @jakarta.annotation.Nullable
    private ModeEnum mode;
    @jakarta.annotation.Nullable
    private String name;
    @jakarta.annotation.Nullable
    private String _short;
    @jakarta.annotation.Nullable
    private List<BigDecimal> bitmasks = new ArrayList<>();
    @jakarta.annotation.Nullable
    private Boolean _default;
    public ProductType() {
    }

    public ProductType id(@jakarta.annotation.Nullable String id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(@jakarta.annotation.Nullable String id) {
        this.id = id;
    }

    public ProductType mode(@jakarta.annotation.Nullable ModeEnum mode) {

        this.mode = mode;
        return this;
    }

    /**
     * Get mode
     *
     * @return mode
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_MODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ModeEnum getMode() {
        return mode;
    }

    @JsonProperty(JSON_PROPERTY_MODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMode(@jakarta.annotation.Nullable ModeEnum mode) {
        this.mode = mode;
    }

    public ProductType name(@jakarta.annotation.Nullable String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(@jakarta.annotation.Nullable String name) {
        this.name = name;
    }

    public ProductType _short(@jakarta.annotation.Nullable String _short) {

        this._short = _short;
        return this;
    }

    /**
     * Get _short
     *
     * @return _short
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SHORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getShort() {
        return _short;
    }

    @JsonProperty(JSON_PROPERTY_SHORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShort(@jakarta.annotation.Nullable String _short) {
        this._short = _short;
    }

    public ProductType bitmasks(@jakarta.annotation.Nullable List<BigDecimal> bitmasks) {

        this.bitmasks = bitmasks;
        return this;
    }

    public ProductType addBitmasksItem(BigDecimal bitmasksItem) {
        if (this.bitmasks == null) {
            this.bitmasks = new ArrayList<>();
        }
        this.bitmasks.add(bitmasksItem);
        return this;
    }

    /**
     * Get bitmasks
     *
     * @return bitmasks
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BITMASKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<BigDecimal> getBitmasks() {
        return bitmasks;
    }

    @JsonProperty(JSON_PROPERTY_BITMASKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBitmasks(@jakarta.annotation.Nullable List<BigDecimal> bitmasks) {
        this.bitmasks = bitmasks;
    }

    public ProductType _default(@jakarta.annotation.Nullable Boolean _default) {

        this._default = _default;
        return this;
    }

    /**
     * Get _default
     *
     * @return _default
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DEFAULT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getDefault() {
        return _default;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDefault(@jakarta.annotation.Nullable Boolean _default) {
        this._default = _default;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProductType productType = (ProductType) o;
        return Objects.equals(this.id, productType.id) &&
                Objects.equals(this.mode, productType.mode) &&
                Objects.equals(this.name, productType.name) &&
                Objects.equals(this._short, productType._short) &&
                Objects.equals(this.bitmasks, productType.bitmasks) &&
                Objects.equals(this._default, productType._default);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, mode, name, _short, bitmasks, _default);
    }

    @Override
    public String toString() {
        String sb = "class ProductType {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    mode: " + toIndentedString(mode) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    _short: " + toIndentedString(_short) + "\n" +
                "    bitmasks: " + toIndentedString(bitmasks) + "\n" +
                "    _default: " + toIndentedString(_default) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets mode
     */
    public enum ModeEnum {
        AIRCRAFT("aircraft"),

        BICYCLE("bicycle"),

        BUS("bus"),

        CAR("car"),

        GONDOLA("gondola"),

        TAXI("taxi"),

        TRAIN("train"),

        WALKING("walking"),

        WATERCRAFT("watercraft");

        private final String value;

        ModeEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static ModeEnum fromValue(String value) {
            for (ModeEnum b : ModeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

}

