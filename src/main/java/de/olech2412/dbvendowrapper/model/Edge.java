/*
 * db-vendo-client
 * Schema for db-vendo-client/hafas-rest-api's Friendly Public Transport Format REST API
 *
 * The version of the OpenAPI document: 6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.olech2412.dbvendowrapper.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Edge
 */
@JsonPropertyOrder({
        Edge.JSON_PROPERTY_FROM_LOCATION,
        Edge.JSON_PROPERTY_TO_LOCATION,
        Edge.JSON_PROPERTY_ICON,
        Edge.JSON_PROPERTY_DIR,
        Edge.JSON_PROPERTY_ICO_CRD
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T16:58:48.518685525+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class Edge {
    public static final String JSON_PROPERTY_FROM_LOCATION = "fromLocation";
    public static final String JSON_PROPERTY_TO_LOCATION = "toLocation";
    public static final String JSON_PROPERTY_ICON = "icon";
    public static final String JSON_PROPERTY_DIR = "dir";
    public static final String JSON_PROPERTY_ICO_CRD = "icoCrd";
    @jakarta.annotation.Nullable
    private StopsIdGet2XXResponse fromLocation;
    @jakarta.annotation.Nullable
    private StopsIdGet2XXResponse toLocation;
    @jakarta.annotation.Nullable
    private Map<String, Object> icon = new HashMap<>();
    @jakarta.annotation.Nullable
    private BigDecimal dir;
    @jakarta.annotation.Nullable
    private IcoCrd icoCrd;

    public Edge() {
    }

    public Edge fromLocation(@jakarta.annotation.Nullable StopsIdGet2XXResponse fromLocation) {

        this.fromLocation = fromLocation;
        return this;
    }

    /**
     * Get fromLocation
     *
     * @return fromLocation
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FROM_LOCATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public StopsIdGet2XXResponse getFromLocation() {
        return fromLocation;
    }


    @JsonProperty(JSON_PROPERTY_FROM_LOCATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFromLocation(@jakarta.annotation.Nullable StopsIdGet2XXResponse fromLocation) {
        this.fromLocation = fromLocation;
    }

    public Edge toLocation(@jakarta.annotation.Nullable StopsIdGet2XXResponse toLocation) {

        this.toLocation = toLocation;
        return this;
    }

    /**
     * Get toLocation
     *
     * @return toLocation
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TO_LOCATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public StopsIdGet2XXResponse getToLocation() {
        return toLocation;
    }


    @JsonProperty(JSON_PROPERTY_TO_LOCATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setToLocation(@jakarta.annotation.Nullable StopsIdGet2XXResponse toLocation) {
        this.toLocation = toLocation;
    }

    public Edge icon(@jakarta.annotation.Nullable Map<String, Object> icon) {

        this.icon = icon;
        return this;
    }

    public Edge putIconItem(String key, Object iconItem) {
        if (this.icon == null) {
            this.icon = new HashMap<>();
        }
        this.icon.put(key, iconItem);
        return this;
    }

    /**
     * Get icon
     *
     * @return icon
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ICON)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, Object> getIcon() {
        return icon;
    }


    @JsonProperty(JSON_PROPERTY_ICON)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
    public void setIcon(@jakarta.annotation.Nullable Map<String, Object> icon) {
        this.icon = icon;
    }

    public Edge dir(@jakarta.annotation.Nullable BigDecimal dir) {

        this.dir = dir;
        return this;
    }

    /**
     * Get dir
     *
     * @return dir
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DIR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getDir() {
        return dir;
    }


    @JsonProperty(JSON_PROPERTY_DIR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDir(@jakarta.annotation.Nullable BigDecimal dir) {
        this.dir = dir;
    }

    public Edge icoCrd(@jakarta.annotation.Nullable IcoCrd icoCrd) {

        this.icoCrd = icoCrd;
        return this;
    }

    /**
     * Get icoCrd
     *
     * @return icoCrd
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ICO_CRD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public IcoCrd getIcoCrd() {
        return icoCrd;
    }


    @JsonProperty(JSON_PROPERTY_ICO_CRD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIcoCrd(@jakarta.annotation.Nullable IcoCrd icoCrd) {
        this.icoCrd = icoCrd;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Edge edge = (Edge) o;
        return Objects.equals(this.fromLocation, edge.fromLocation) &&
                Objects.equals(this.toLocation, edge.toLocation) &&
                Objects.equals(this.icon, edge.icon) &&
                Objects.equals(this.dir, edge.dir) &&
                Objects.equals(this.icoCrd, edge.icoCrd);
    }

    @Override
    public int hashCode() {
        return Objects.hash(fromLocation, toLocation, icon, dir, icoCrd);
    }

    @Override
    public String toString() {
        String sb = "class Edge {\n" +
                "    fromLocation: " + toIndentedString(fromLocation) + "\n" +
                "    toLocation: " + toIndentedString(toLocation) + "\n" +
                "    icon: " + toIndentedString(icon) + "\n" +
                "    dir: " + toIndentedString(dir) + "\n" +
                "    icoCrd: " + toIndentedString(icoCrd) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

