/*
 * db-vendo-client
 * Schema for db-vendo-client/hafas-rest-api's Friendly Public Transport Format REST API
 *
 * The version of the OpenAPI document: 6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.olech2412.dbvendowrapper.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Frame
 */
@JsonPropertyOrder({
        Frame.JSON_PROPERTY_ORIGIN,
        Frame.JSON_PROPERTY_DESTINATION,
        Frame.JSON_PROPERTY_T
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T16:58:48.518685525+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class Frame {
    public static final String JSON_PROPERTY_ORIGIN = "origin";
    public static final String JSON_PROPERTY_DESTINATION = "destination";
    public static final String JSON_PROPERTY_T = "t";
    @jakarta.annotation.Nullable
    private FrameOrigin origin;
    @jakarta.annotation.Nullable
    private FrameOrigin destination;
    @jakarta.annotation.Nullable
    private BigDecimal t;

    public Frame() {
    }

    public Frame origin(@jakarta.annotation.Nullable FrameOrigin origin) {

        this.origin = origin;
        return this;
    }

    /**
     * Get origin
     *
     * @return origin
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ORIGIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public FrameOrigin getOrigin() {
        return origin;
    }


    @JsonProperty(JSON_PROPERTY_ORIGIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrigin(@jakarta.annotation.Nullable FrameOrigin origin) {
        this.origin = origin;
    }

    public Frame destination(@jakarta.annotation.Nullable FrameOrigin destination) {

        this.destination = destination;
        return this;
    }

    /**
     * Get destination
     *
     * @return destination
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DESTINATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public FrameOrigin getDestination() {
        return destination;
    }


    @JsonProperty(JSON_PROPERTY_DESTINATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDestination(@jakarta.annotation.Nullable FrameOrigin destination) {
        this.destination = destination;
    }

    public Frame t(@jakarta.annotation.Nullable BigDecimal t) {

        this.t = t;
        return this;
    }

    /**
     * Get t
     *
     * @return t
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_T)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getT() {
        return t;
    }


    @JsonProperty(JSON_PROPERTY_T)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setT(@jakarta.annotation.Nullable BigDecimal t) {
        this.t = t;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Frame frame = (Frame) o;
        return Objects.equals(this.origin, frame.origin) &&
                Objects.equals(this.destination, frame.destination) &&
                Objects.equals(this.t, frame.t);
    }

    @Override
    public int hashCode() {
        return Objects.hash(origin, destination, t);
    }

    @Override
    public String toString() {
        String sb = "class Frame {\n" +
                "    origin: " + toIndentedString(origin) + "\n" +
                "    destination: " + toIndentedString(destination) + "\n" +
                "    t: " + toIndentedString(t) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

